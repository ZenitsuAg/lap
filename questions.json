{
    "module1": [],
    "module2": [],
    "module3": [
        {
            "Question": "What is the utility of HBAR?",
            "Answer": "All of the above"
        },
        {
            "Question": "Three types of fees make up the Hedera Transaction fee. Please choose the one that is NOT correct.",
            "Answer": "Inclusion Fee"
        },
        {
            "Question": "Fees on Hedera are based on the United States Dollar.",
            "Answer": "True"
        },
        {
            "Question": "This key is used to decrypt a message on the network",
            "Answer": "Private Key"
        },
        {
            "Question": "This algorithm works with the Ethereum Virtual Machine.",
            "Answer": "ECDSA"
        },
        {
            "Question": "This algorithm has higher security and is compatible with Hedera native services.",
            "Answer": "ED25519"
        },
        {
            "Question": "Please select all components which are part of a Hedera account.",
            "Answer": "Account ID, Keys, Account Alias and Staked Node ID"
        },
        {
            "Question": "A signature is NOT required to submit a transaction.",
            "Answer": "False"
        },
        {
            "Question": "A transaction submitted to a Hedera network must include",
            "Answer": "All of the above"
        },
        {
            "Question": "Hedera natively supports multisignature transactions.",
            "Answer": "True"
        },
        {
            "Question": "In minutes, how long is the valid duration on a transaction?",
            "Answer": "3"
        },
        {
            "Question": "If a transaction is submitted to the network in the time window specified by the valid start time + the valid duration then the transaction will be",
            "Answer": "accepted"
        },
        {
            "Question": "If the schedule doesn't receive sufficient signatures within 10 minutes, it's deleted",
            "Answer": "False"
        },
        {
            "Question": "With this method, a prospective signer checks the contents of the inner transaction before it is signed.",
            "Answer": "scheduleGetInfo"
        },
        {
            "Question": "Which of these are included in scheduleCreate",
            "Answer": "A - scheduledTransactionBody B - memo D - payerAccountId"
        },
        {
            "Question": "Generally, queries are not subject to fees.",
            "Answer": "False"
        },
        {
            "Question": "This method of confirmation exposes information in the most detail.",
            "Answer": "State proofs"
        },
        {
            "Question": "Please choose all INCORRECT answers.",
            "Answer": "C - State is not able to be changed D - Transaction history is mutable"
        },
        {
            "Question": "It is important to avoid targeting only one node for submitting transactions as this could be a single point of failure",
            "Answer": "True"
        },
        {
            "Question": "Please choose all types of Hedera Improvement Proposals (HIPs) listed.",
            "Answer": "ABE ie (A - Informational, B - Standards Track, E - Process)"
        }
    ],
    "module4": [
        {
            "Question": "The testnet allows creation of only ED25519 accounts.",
            "Answer": "False"
        },
        {
            "Question": "Please select all languages that are officially supported in the Hedera SDK?",
            "Answer": "ABDF, A - Swift, B - Java, D - Go, F - Javascript"
        },
        {
            "Question": "A client may send the same transaction to multiple nodes via the Hedera SDK.",
            "Answer": "True"
        },
        {
            "Question": "Mainnet is the only Hedera network you can submit transactions and queries to using the SDK.",
            "Answer": "D"
        },
        {
            "Question": "This class is used by the SDK to create accounts",
            "Answer": "A - AccountCreateTransaction"
        },
        {
            "Question": "The .env file is used to store your private key as an environment variable, offering an improvement over hardcoding it directly into your code.",
            "Answer": "True"
        },
        {
            "Question": "Spot the error in the code:",
            "Answer": "D - The net value of the transfer should be zero, ensuring that the total HBAR sent by the sender matches the total received by the recipient."
        },
        {
            "Question": "You can check the consensus status of a transaction response by calling .getReceipt() on it.",
            "Answer": "True"
        },
        {
            "Question": "After executing the provided code block, what HBAR denomination is used to represent the account balance in the output?",
            "Answer": "TINYBAR"
        },
        {
            "Question": "What is the purpose of the provided code block:",
            "Answer": "The code sets up environment variables and creates a testnet client with your account as the operator account."
        },
        {
            "Question": "Which of the following code snippets correctly generates a private-public key pair of type ED25519. Choose the correct option.",
            "Answer": "B"
        },
        {
            "Question": "The clients operator account is the account funding the newly created account.",
            "Answer": "True"
        },
        {
            "Question": "When setting up your .env file what key is used for MY_PRIVATE_KEY.",
            "Answer": "B - DER Encoded ED25519 Private Key"
        },
        {
            "Question": "In order to allow another account or contract to transfer HBAR out of your account, you must grant that account or contract an allowance.",
            "Answer": "True"
        },
        {
            "Question": "To grant an allowance for another account to transfer HBAR out of your account, select the correct combination of class and method.",
            "Answer": "C - AccountAllowanceApproveTransaction with `.approveHbarAllowance()`"
        },
        {
            "Question": "In the context of granting an allowance for HBAR transfers when using the correct method, why is the `ownerAccountId` argument necessary?",
            "Answer": "B - It identifies the owner account ID that is authorizing the allowance"
        }
    ],
    "module5": [
        {
            "Question": "When working on your local network you create and submit transactions and queries to your local consensus node.",
            "Answer": "True"
        },
        {
            "Question": "Interacting with the testnet mirror nodes to pull local transaction data is a characteristic of working with a local network.",
            "Answer": "False"
        },
        {
            "Question": "Select the correct method to configure your local network client",
            "Answer": "C - client.forNetwork(node).setMirrorNetwork(mirrorNodeIpAndPort)"
        },
        {
            "Question": "The client operator is provided by you by the local node and will pay for the fees associated with each transaction/query.",
            "Answer": "True"
        }
    ],
    "module6": [
        {
            "Question": "Choose the correct class used to create a topic in the Hedera Consensus Service (HCS).",
            "Answer": "D - TopicCreateTransaction"
        },
        {
            "Question": "When submitting a message to an HCS topic, it is necessary to set the topicID.",
            "Answer": "True"
        },
        {
            "Question": "In the context of Topics in HCS, what is the purpose of the submit key? Select one answer.",
            "Answer": "C - It controls access to message submission."
        },
        {
            "Question": "Choose the correct class used to get topic messages in the Hedera Consensus Service (HCS)",
            "Answer": "D - TopicMessageQuery"
        },
        {
            "Question": "In the context of HCS, why is a topic referred to as \"private\" even though the data is public?",
            "Answer": "A - The topic's access is restricted to control who can submit messages to it."
        },
        {
            "Question": "In the context of HCS, what determines whether the `updateTopic` and `deleteTopic` functions can be used on a topic?",
            "Answer": "B - The presence of an adminKey."
        },
        {
            "Question": "Which method is used to set the time to start subscribing to a topic's messages in Hedera Hashgraph?",
            "Answer": "A - setStartTime()"
        }
    ],
    "module7": [
        {
            "Question": "Please select all the methods required when creating a token using the Hedera Token Service.",
            "Answer": "BDE"
        },
        {
            "Question": "Select the correct class used to create a token.",
            "Answer": "A - TokenCreateTransaction"
        },
        {
            "Question": "If you do not specify the token type when creating a token, it will default to creating a fungible token.",
            "Answer": "True"
        },
        {
            "Question": "What is the main characteristic of a royalty fee in relation to NFTs?",
            "Answer": "C - It is charged each time NFT ownership is transferred and sent to the royalty collecter."
        },
        {
            "Question": "The supply key needs to be set in order to mint tokens and increase the supply.",
            "Answer": "True"
        },
        {
            "Question": "What is the purpose of specifying the initial supply when creating fungible tokens?",
            "Answer": "B - To determine the amount of tokens initially put into circulation."
        },
        {
            "Question": "Why do we set the treasury account id?",
            "Answer": "A/B"
        },
        {
            "Question": "When signing a transaction you must pass in a private key of type PrivateKey. Select the correct code necessary to convert a string into a Private Key.",
            "Answer": "C - PrivateKey.fromString(myStringPrivateKey);"
        },
        {
            "Question": "Select the correct code snippet to associate an account to a token.",
            "Answer": "A/B"
        },
        {
            "Question": "What is the purpose of an Associate transaction?",
            "Answer": "B - Allows a user to receive a new fungible or new nonfungible token"
        },
        {
            "Question": "From the provided answers, what is a possible error message you can recieve when transferring a token to another user?",
            "Answer": "C - TOKEN_NOT_ASSOCIATED_TO_ACCOUNT"
        },
        {
            "Question": "Choose the correct token type for creating an NFT.",
            "Answer": "TokenType.NonFungibleUnique"
        },
        {
            "Question": "What action must be taken when creating a non-fungible token (NFT) in terms of setting the initial supply?",
            "Answer": "C - Set the initial supply to 0."
        },
        {
            "Question": "In the context of fungible tokens what does the method .setDecimals() do?",
            "Answer": "C - It controls how divisible the token is and how fractions of the token's value are handled"
        },
        {
            "Question": "When creating a supply key, you should save it to a file so you can later change the supply of your tokens.",
            "Answer": "True"
        },
        {
            "Question": "When creating an NFT .setDecimals() must be set to 0.",
            "Answer": "True"
        },
        {
            "Question": "In the context of token management, why would you set a KYC key?",
            "Answer": "B - To \"Know your Customer\" and gather further details about them."
        },
        {
            "Question": "In the context of NFTs, it is necessary to mint NFTs after generating a token ID.",
            "Answer": "True"
        },
        {
            "Question": "What role does MetaData play in NFTs?",
            "Answer": "C - It is the data that is being tokenized onto the NFT."
        },
        {
            "Question": "Where are the data and Metadata usually stored for NFTs?",
            "Answer": "C - InterPlanetary File System IPFS)"
        },
        {
            "Question": "What is the significance of serial numbers in the context of NFTs?",
            "Answer": "C - They differentiate individual NFTs within the same token ID"
        }
    ],
    "module8": [
        {
            "Question": "Which is a defining characteristic of decentralized applications (dApps)?",
            "Answer": "C - dApps operate on a blockchain or P2P network."
        },
        {
            "Question": "What benefit is there to having a distributed application?",
            "Answer": "ABC"
        },
        {
            "Question": "Which line of code initializes Hashconnect with the given `appMetadata`?",
            "Answer": "C - const initData = await hashconnect.init(appMetadata);"
        },
        {
            "Question": "When working with Hashconnect, what is the purpose of using the `executeWithSigner` method?",
            "Answer": "C - To invoke the wallet and ask the user to sign the transaction."
        },
        {
            "Question": "What is one of the core features of a Decentralized Application (dApp)?",
            "Answer": "B - The front end of an application can talk to a shared database."
        },
        {
            "Question": "What is the purpose of the Hashconnect library?",
            "Answer": "A - To establish connections between Hedera apps and wallets."
        },
        {
            "Question": "How can you correctly retrieve the topic ID after executing a topic create transaction?",
            "Answer": "C"
        },
        {
            "Question": "Select the correct code to submit a message to a Hedera Consensus Service (HCS) topic using hashconnect",
            "Answer": "B"
        },
        {
            "Question": "In the Dapp after selecting 'Send Topic Message' the user must sign the transaction through the wallet by click 'approve' which will submit the message to the network.",
            "Answer": "True"
        },
        {
            "Question": "You can check the message was submitted to the network by visitng https://hashscan.io/testnet/dashboard and searching by topicID.",
            "Answer": "True"
        }
    ],
    "module9": [
        {
            "Question": "The Hedera Smart Contract Services uses the Solidity Smart Contract Language. True or False",
            "Answer": "True"
        },
        {
            "Question": "What is Solidity in the context of Smart Contracts?",
            "Answer": "D - Solidity is an object-oriented, high-level language used for implementing smart contracts."
        },
        {
            "Question": "What is the purpose of Application Binary Interface (ABI) in the context of smart contracts and web applications?",
            "Answer": "B - ABI bridges smart contracts and web apps, facilitating communication between high-level languages like JavaScript and the EVM bytecode."
        },
        {
            "Question": "What is bytecode in the context of a smart contract?",
            "Answer": "C - Bytecode is an executable form of the smart contract stored in binary."
        },
        {
            "Question": "During the lab, we were able to obtain the smart contracts bytecode by doing the following: const bytecode = helloHedera.data.bytecode.object;",
            "Answer": "True"
        },
        {
            "Question": "Select the correct code snippet that creates a file on Hedera and stores the bytecode and gets the file id",
            "Answer": "C"
        },
        {
            "Question": "Select the correct class used to create a smart instance on the Hedera network",
            "Answer": "C"
        },
        {
            "Question": "Select the correct code snippet that creates a smart contract instance on Hedera and gets the contract id",
            "Answer": "C"
        },
        {
            "Question": "True or False: FileCreateTransaction() is executed to create a smart contract on Hedera.",
            "Answer": "False"
        },
        {
            "Question": "Select the correct code snippet that calls a function of a smart contract (it does not change state)",
            "Answer": "B"
        },
        {
            "Question": "Select the correct class used to execute a smart contract function (it will change state)",
            "Answer": "C - ContractExecuteTransaction()"
        },
        {
            "Question": "You can use the ContractCreateFlow() class to perform a FileCreateTranscation(), FileAppendTransaction() and ContractCreateTransaction() in a single call resulting in deploying a smart contract on Hedera.",
            "Answer": "True"
        },
        {
            "Question": "What class is used when wanting to create a new NFT token using a Smart Contract on Hedera.",
            "Answer": "D - ContractExecuteTransaction()"
        },
        {
            "Question": "After calling .getRecord() on the executed createTokenTx, what do you call to get the result returned by calling the createNFT smart contract function?",
            "Answer": "C - contractFunctionResult.getAddress(0)"
        }
    ],
    "module10": [
        {
            "Question": "Which of the following statements about Hashio and its purpose are true? Select all that apply.",
            "Answer": "C & D"
        },
        {
            "Question": "How does Hashio help developers transition from Ethereum to Hedera?",
            "Answer": "C - It allows smart contract developers to use tools like ethers.js and MetaMask."
        },
        {
            "Question": "How does the JSON RPC Relay enable Ethereum-compatible wallets to create and sign transactions to be executed on the Hedera Network?",
            "Answer": "C - It wraps signed Ethereum transactions into Hedera API (HAPI) transactions and executes them, facilitating cross-network communication."
        },
        {
            "Question": "In order to import your Hedera account into MetaMask, what key needs to be imported?",
            "Answer": "D - Hex Encoded ECDSA Private Key"
        },
        {
            "Question": "Select the correct Hedera Tesnet Chain ID",
            "Answer": "C - 296"
        },
        {
            "Question": "To connect to Hedera Testnet you first need to manually add the network to MetaMask.",
            "Answer": "True"
        }
    ],
    "module11": [
        {
            "Question": "What library is used to help create/interact with EVM transactions on MetaMask?",
            "Answer": "C - Ethers.js"
        },
        {
            "Question": "True or False: Prepare to associate an HTS token with MetaMask by creating a contract using the HTS token address & ethers.Contract().",
            "Answer": "False"
        },
        {
            "Question": "Select the correct code snippet that associates an HTS token with a MetaMask account",
            "Answer": "C"
        },
        {
            "Question": "In the contractDeployFcn(), only the abi and smart contract bytecode are needed to create a contract instance using ethers.js. True or False",
            "Answer": "False"
        },
        {
            "Question": "Select the correct code snippet that executes a contract function & invokes MetaMask wallet to ask for signature",
            "Answer": "A"
        },
        {
            "Question": "Select the correct code snippet that deploys a smart contract using ethers.js & waits for the receipt",
            "Answer": "D"
        },
        {
            "Question": "The ABI has important information like which functions are callable in the smart contract. True or False",
            "Answer": "True"
        },
        {
            "Question": "Ethers.js is a Javascript library for Ethereum development. True or False",
            "Answer": "True"
        }
    ]
}